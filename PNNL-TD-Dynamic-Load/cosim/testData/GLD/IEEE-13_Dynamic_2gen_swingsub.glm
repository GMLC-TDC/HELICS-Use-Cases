//  IEEE 13 Node Test System 

clock {
	timezone "PST+8PDT";
	starttime '2001-01-01 00:00:00 PST';
	stoptime '2001-01-01 00:00:40 PST';
	
}

#set suppress_repeat_messages=1
#set relax_naming_rules=1;
#set profiler=1
//#define rotor_convergence=0.0000000001
#define rotor_convergence=0.0
#set double_format=%+.12lg
#set complex_format=%+.12lg%+.12lg%c

// #set verbose=1

//Deltamode declarations - global values
#set deltamode_maximumtime=5000000000000	//2 minutes
#set deltamode_iteration_limit=10		//Iteration limit

module tape;

module reliability {
	enable_subsecond_models TRUE;
	maximum_event_length 18000;	//Maximum length of events in seconds (manual events are excluded from this limit)
	report_event_log true;
}

module powerflow {
	enable_subsecond_models true;
	deltamode_timestep 10 ms;
	line_capacitance TRUE;
	all_powerflow_delta true;
	solver_method NR;
};

module generators {
	enable_subsecond_models true;
	deltamode_timestep 10 ms;
}

object fault_check {				//Fault check object - required to make powerflow properly handle faults
	name test_fault;
	flags DELTAMODE;
	check_mode ONCHANGE;			//Fault check mode - should be in ONCHANGE - reliability will change it
	eventgen_object testgen_sw;		//Link to eventgen object - used to handle "unscheduled" events - fuses and switch openings
	output_filename testout.txt;	//"unsupported node" dump file
};

object metrics {
	name testmetrics;
	report_file testmetrics.txt;						//Name of the output file
	module_metrics_object pwrmetrics;					//Module-specific "metrics" object - a powerflow metrics object is specified here
	metrics_of_interest "SAIFI,SAIDI,CAIDI,ASAI,MAIFI";	//Metrics to output into the report file
	customer_group "groupid=METERTEST";					//Search criteria for determining "customers" of the system - similar to collectors - this group is both three-phase and triplex meters
	metric_interval 5 h; 								//Interval to run metrics - (separate from "simulation-long" metrics) - set to 0 for no metric updates (defaults to no interval updates)
	report_interval 5 h;								//Interval to dump metric updates to the output file.
}

// Manual object - switch
object eventgen {
	flags DELTAMODE;
	name testgen_sw;
	parent testmetrics;
	fault_type "DLG-BC";	//Phases A and C will switch
	manual_outages "line_632-645,2001-01-01 00:00:15.1,2001-01-01 00:04:00";
}

object power_metrics {		//Powerflow metrics object - performs 1366 metric calculations
	name pwrmetrics;
	base_time_value 1 h;	//Base time value for 1366-metrics.  Defaults to 1 minute
}

// Phase Conductor for 601: 556,500 26/7 ACSR
object overhead_line_conductor {
	name olc6010;
	geometric_mean_radius 0.031300;
	diameter 0.927 in;
	resistance 0.185900;
}

// Phase Conductor for 602: 4/0 6/1 ACSR
object overhead_line_conductor {
	name olc6020;
	geometric_mean_radius 0.00814;
	diameter 0.56 in;
	resistance 0.592000;
}

// Phase Conductor for 603, 604, 605: 1/0 ACSR
object overhead_line_conductor {
	name olc6030;
	geometric_mean_radius 0.004460;
	diameter 0.4 in;
	resistance 1.120000;
}


// Phase Conductor for 606: 250,000 AA,CN
object underground_line_conductor { 
	 name ulc6060;
	 outer_diameter 1.290000;
	 conductor_gmr 0.017100;
	 conductor_diameter 0.567000;
	 conductor_resistance 0.410000;
	 neutral_gmr 0.0020800; 
	 neutral_resistance 14.87200;  
	 neutral_diameter 0.0640837;
	 neutral_strands 13.000000;
	 insulation_relative_permitivitty 2.3;
	 shield_gmr 0.000000;
	 shield_resistance 0.000000;
}

// Phase Conductor for 607: 1/0 AA,TS N: 1/0 Cu
object underground_line_conductor { 
	 name ulc6070;
	 outer_diameter 1.060000;
	 conductor_gmr 0.011100;
	 conductor_diameter 0.368000;
	 conductor_resistance 0.970000;
	 neutral_gmr 0.011100;
	 neutral_resistance 0.970000; // Unsure whether this is correct
	 neutral_diameter 0.0640837;
	 neutral_strands 6.000000;
	 insulation_relative_permitivitty 2.3;
	 shield_gmr 0.000000;
	 shield_resistance 0.000000;
}

// Overhead line configurations
object line_spacing {
	name ls500601;
	distance_AB 2.5;
	distance_AC 4.5;
	distance_BC 7.0;
	distance_BN 5.656854;
	distance_AN 4.272002;
	distance_CN 5.0;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

// Overhead line configurations
object line_spacing {
	name ls500602;
	distance_AC 2.5;
	distance_AB 4.5;
	distance_BC 7.0;
	distance_CN 5.656854;
	distance_AN 4.272002;
	distance_BN 5.0;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

object line_spacing {
	name ls505603;
	distance_BC 7.0;
	distance_CN 5.656854;
	distance_BN 5.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

object line_spacing {
	name ls505604;
	distance_AC 7.0;
	distance_AN 5.656854;
	distance_CN 5.0;
	distance_AE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

object line_spacing {
	name ls510;
	distance_CN 5.0;
	distance_CE 28.0;
	distance_NE 24.0;
}

object line_configuration {
	name lc601;
	conductor_A olc6010;
	conductor_B olc6010;
	conductor_C olc6010;
	conductor_N olc6020;
	spacing ls500601;
}

object line_configuration {
	name lc602;
	conductor_A olc6020;
	conductor_B olc6020;
	conductor_C olc6020;
	conductor_N olc6020;
	spacing ls500602;
}

object line_configuration {
	name lc603;
	conductor_B olc6030;
	conductor_C olc6030;
	conductor_N olc6030;
	spacing ls505603;
}

object line_configuration {
	name lc604;
	conductor_A olc6030;
	conductor_C olc6030;
	conductor_N olc6030;
	spacing ls505604;
}

object line_configuration {
	name lc605;
	conductor_C olc6030;
	conductor_N olc6030;
	spacing ls510;
}

//Underground line configuration
object line_spacing {
	 name ls515;
	 distance_AB 0.500000;
	 distance_BC 0.500000;
	 distance_AC 1.000000;
}

object line_spacing {
	 name ls520;
	 distance_AN 0.083333;
}

object line_configuration {
	 name lc606;
	 conductor_A ulc6060;
	 conductor_B ulc6060;
	 conductor_C ulc6060;
	 spacing ls515;
}

object line_configuration {
	 name lc607;
	 conductor_A ulc6070;
	 conductor_N ulc6070;
	 spacing ls520;
}

// Define line objects
object fuse {
	name imaguse;
	phases BCN;
	from n632;
	to n632a;
}

object overhead_line {
     phases "BCN";
     name line_632-645;
     from n632a;
     to l645;
     length 500;
     configuration lc603;
}

object overhead_line {
     phases "BCN";
     name line_645-646;
    from l645;
     to l646;
     length 300;
     configuration lc603;
}

object overhead_line { //650632 {
     phases "ABCN";
     name line_650-632;
     from n650;
     to n632;
     length 2000;
     configuration lc601;
}

//Split line for distributed load
object overhead_line { //6326321 {
     phases "ABCN";
     name line_632-6321;
     from n632;
     to l6321;
     length 500;
     configuration lc601;
}

object overhead_line { //6321671 {
     phases "ABCN";
     name line_6321-671;
    from l6321;
     to l671;
     length 1500;
     configuration lc601;
}
//End split line

object overhead_line { //671680 {
     phases "ABCN";
     name line_671-680;
    from l671;
     to n680;
     length 1000;
     configuration lc601;
}

object overhead_line { //671684 {
     phases "ACN";
     name line_671-684;
    from l671;
     to n684;
     length 300;
     configuration lc604;
}

 object overhead_line { //684611 {
      phases "CN";
      name line_684-611;
      from n684;
      to l611;
      length 300;
      configuration lc605;
}

object underground_line { //684652 {
      phases "AN";
      name line_684-652;
      from n684;
      to l652;
      length 800;
      configuration lc607;
}

object underground_line { //692675 {
     phases "ABC";
     name line_692-675;
    from l692;
     to l675;
     length 500;
     configuration lc606;
}

object overhead_line { //632633 {
     phases "ABCN";
     name line_632-633;
     from n632;
     to n633;
     length 500;
     configuration lc602;
}

// Create node objects
object node { //633 {
     name n633;
     phases "ABCN";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     nominal_voltage 2401.7771;
}

object node { //632 {
     name n632;
     phases "ABCN";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     nominal_voltage 2401.7771;
}

object node { //632 {
     name n632a;
     phases "BCN";
     nominal_voltage 2401.7771;
}

object substation {
     bustype SWING;
     name ROOT;
     phases ABCN;
     reference_phase PHASE_A;
     nominal_voltage 80000;
     positive_sequence_voltage 76786-8545.48j;
	 
     object recorder {
          property positive_sequence_voltage.real, positive_sequence_voltage.imag, voltage_A.real,voltage_A.imag,voltage_B.real,voltage_B.imag,voltage_C.real,voltage_C.imag;
	  interval 1;
          limit 100000000;
          flags DELTAMODE;
	  file Voltage_substation.csv;
     };
     object recorder {
          property distribution_load.real, distribution_load.imag;
	  interval 1;
          limit 100000000;
          flags DELTAMODE;
	  file Load_substation.csv;
     };
}

object transformer_configuration {
     name substation_config;
     connect_type WYE_WYE;
     install_type PADMOUNT;
     primary_voltage 80000 V;
     secondary_voltage 2401.7771 V;
     power_rating 2250000;
     powerA_rating 750000;
     powerB_rating 750000;
     powerC_rating 750000;
     impedance 0.0015+0.00675j;
}

object transformer {
     phases ABCN;
     //groupid F1_Network_Trans;
     name F1_Transformer1;
     from ROOT;
     to n650;
     configuration substation_config;
     object recorder {
          property power_out_real;
          limit 100000000;
          interval 60;
          file sub_xfmr_power_out_real.csv;
     };
}



//object node { //650 {
object meter { //650 {
      name n650;
      phases "ABCN";
      //bustype SWING;
	  flags DELTAMODE;
	  groupid METERTEST;
      // voltage_A 2401.7771;
      // voltage_B -1200.8886-2080.000j;
      // voltage_C -1200.8886+2080.000j;

	//voltage_A 2403+0.0j;
	//voltage_B -1201.5-2081.1j;
	//voltage_C -1201.5+2081.1j;
	nominal_voltage 2401.7771;
	  
	 object recorder {
		property voltage_A.real,voltage_A.imag,voltage_B.real,voltage_B.imag,voltage_C.real,voltage_C.imag;
		interval 1;
		flags DELTAMODE;
		file Voltage_650.csv;
	};
	object recorder {
		property measured_power;
		interval 1;
		file overallpower.csv;
	};

} 
 
object node { //680 {
       name n680;
       phases "ABCN";
       voltage_A 2401.7771;
       voltage_B -1200.8886-2080.000j;
       voltage_C -1200.8886+2080.000j;
       nominal_voltage 2401.7771;
}
 
 
object node { //684 {
      name n684;
      phases "ACN";
      voltage_A 2401.7771;
      voltage_B -1200.8886-2080.000j;
      voltage_C -1200.8886+2080.000j;
      nominal_voltage 2401.7771;
} 
 
 
 
// Create load objects 

object load { //634 {
     name l634;
     phases "ABCN";
     voltage_A 480.000+0j;
     voltage_B -240.000-415.6922j;
     voltage_C -240.000+415.6922j;
     constant_power_A 160000+110000j;
     constant_power_B 120000+90000j;
     constant_power_C 120000+90000j;
     nominal_voltage 480.000;
   object recorder {
	flags DELTAMODE;
	file Load_634_B.csv;
	property constant_power_B.real,constant_power_B.imag;
	interval 1;
   };
 
}
 
object load { //645 {
     name l645;
     phases "BCN";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     constant_power_B 170000+125000j;
     nominal_voltage 2401.7771;
}
 
object load { //646 {
     name l646;
     phases "BCD";
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     constant_impedance_B 56.5993+32.4831j;
     nominal_voltage 2401.7771;
}
 
 
object load { //652 {
     name l652;
     phases "AN";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     constant_impedance_A 31.0501+20.8618j;
     nominal_voltage 2401.7771;
}
 
object load { //671 {
     name l671;
     phases "ABCD";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     constant_power_A 385000+220000j;
     constant_power_B 385000+220000j;
     constant_power_C 385000+220000j;
     nominal_voltage 2401.7771;
}
 
object load { //675 {
     name l675;
     phases "ABC";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     constant_power_A 485000+190000j;
     constant_power_B 68000+60000j;
     constant_power_C 290000+212000j;
     constant_impedance_A 0.00-28.842666j;          //Shunt Capacitors
     constant_impedance_B 0.00-28.842666j;
     constant_impedance_C 0.00-28.842666j;
     nominal_voltage 2401.7771;
}
 
object load { //692 {
     name l692;
     phases "ABCD";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     constant_current_A 0+0j;
     constant_current_B 0+0j;
     constant_current_C -17.2414+51.8677j;
     nominal_voltage 2401.7771;
}
 
object load { //611 {
     name l611;
     phases "CN";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
     constant_current_C -6.5443+77.9524j;
     constant_impedance_C 0.00-57.68533238j;         //Shunt Capacitor
     nominal_voltage 2401.7771;
}
 
// distributed load between node 632 and 671
// 2/3 of load 1/4 of length down line: Kersting p.56
object load { //6711 {
     name l6711;
     parent l671;
     phases "ABC";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
//     constant_power_A 5666.6667+3333.3333j;
//     constant_power_B 22000+12666.6667j;
//     constant_power_C 39000+22666.6667j;
     constant_power_A 5700.00+3300.00j;
     constant_power_B 22000.00+13000.00j;
     constant_power_C 39000.00+23000.00j;
     nominal_voltage 2401.7771;
}

object load { //6321 {
     name l6321;
     phases "ABCN";
     voltage_A 2401.7771;
     voltage_B -1200.8886-2080.000j;
     voltage_C -1200.8886+2080.000j;
//     constant_power_A 11333.333+6666.6667j;
//     constant_power_B 44000+25333.3333j;
//     constant_power_C 78000+45333.3333j;
     constant_power_A 11000.00+6700.00j;
     constant_power_B 44000.00+25000.00j;
     constant_power_C 78000.00+45000.00j;
     nominal_voltage 2401.7771;
}
 

 
// Switch
object switch {
     phases "ABCN";
     name switch_671-692;
    from l671;
     to l692;
     status CLOSED;
}
 
// Transformer
object transformer_configuration {
	name tc400;
	connect_type WYE_WYE;
  	install_type PADMOUNT;
  	power_rating 500;
  	primary_voltage 4160;
  	secondary_voltage 480;
  	resistance 0.011;
  	reactance 0.02;
}
  
object transformer {
  	phases "ABCN";
  	name transformer_633-634;
  	from n633;
  	to l634;
  	configuration tc400;
}
  
 
// // Regulator
// object regulator_configuration {
	// name regconfig6506321;
	// connect_type 1;
	// band_center 122.000;
	// band_width 2.0;
	// time_delay 30.0;
	// raise_taps 16;
	// lower_taps 16;
	// current_transducer_ratio 700;
	// power_transducer_ratio 20;
	// compensator_r_setting_A 3.0;
	// compensator_r_setting_B 3.0;
	// compensator_r_setting_C 3.0;
	// compensator_x_setting_A 9.0;
	// compensator_x_setting_B 9.0;
	// compensator_x_setting_C 9.0;
	// CT_phase "ABC";
	// PT_phase "ABC";
	// regulation 0.10;
	// Control MANUAL;
	// Type A;
	// tap_pos_A 10;
	// tap_pos_B 8;
	// tap_pos_C 11;
// }
  
// object regulator {
	 // name fregn650n630;
	 // phases "ABC";
	 // from n650;
	 // to n630;
	 // configuration regconfig6506321;
// }




///// generators data //////////////////////



object diesel_dg {
	parent n633;
	name Gen3;
	Rated_V 4160; //Line-to-Line value
	Rated_VA 2500000; // Defaults to 10 MVA
	power_out_A 200000;
	power_out_B 200000;
	power_out_C 200000;
	flags DELTAMODE;
	
	Gen_type DYN_SYNCHRONOUS;
	rotor_speed_convergence ${rotor_convergence};
	inertia 0.55;
	damping 0;
	Ra 0.006543;
	Ta 0.06;
	Xl 0.076;
	Xd 1.67;
	Xq 1.082;
	Xdp 0.148;
	Xqp 0.243;
	Xdpp 0.107;
	Xqpp 0.189;
	Tdop 1.75;
	Tqop 0.448;
	Tdopp 0.017;
	Tqopp 0.0168;
	X0 .006543+0.09j;
	X2 .007043+0.13664j; //from Kundur
	//X2 0.0102528+0.107199j;	//Theoretically calculated using EMTP guidebook equations
	
	Exciter_type SEXS; //NO_EXC; //
	TA 0.01;
	TB 0.08;
	TC 0.2;	
    KA 50;
	EMAX 3;
	EMIN -3;

	Governor_type DEGOV1;
	DEGOV1_R 0.05; // A value of 0 means no droop characteristic           
	DEGOV1_T1 0.2;             
	DEGOV1_T2 0.1;             
	DEGOV1_T3 0.5;             
	DEGOV1_K 1.5;              
	DEGOV1_T4 1.0;               
	DEGOV1_T5 0.1;             
	DEGOV1_T6 0.2;             
	DEGOV1_TMAX 1.2;             
	DEGOV1_TMIN 0.0;             
	DEGOV1_TD 0.01; 

	object recorder {
		property rotor_speed,rotor_angle,flux1d,flux2q,EpRotated,VintRotated,Eint_A,Eint_B,Eint_C,Irotated,pwr_electric.real,pwr_electric.imag,pwr_mech,torque_mech,torque_elec,field_voltage;
		flags DELTAMODE;
		interval 1;
		file "Gen_3_Speed.csv";
	};
}

object diesel_dg {
	parent n680;
	name Gen2;
	Rated_V 4160; //Line-to-Line value
	Rated_VA 2500000; // Defaults to 10 MVA
	power_out_A 473000+398000j;
	power_out_B 473000+398000j;
	power_out_C 473000+398000j;
	flags DELTAMODE;
	
	Gen_type DYN_SYNCHRONOUS;
	rotor_speed_convergence ${rotor_convergence};
	inertia 0.55;
	damping 0;
	Ra 0.006543;
	Ta 0.06;
	Xl 0.076;
	Xd 1.67;
	Xq 1.082;
	Xdp 0.148;
	Xqp 0.243;
	Xdpp 0.107;
	Xqpp 0.189;
	Tdop 1.75;
	Tqop 0.448;
	Tdopp 0.017;
	Tqopp 0.0168;
	X0 .006543+0.09j;
	X2 .007043+0.13664j; //from Kundur
	//X2 0.0102528+0.107199j;	//Theoretically calculated using EMTP guidebook equations
	
	Exciter_type SEXS; //NO_EXC; //
	TA 0.01;
	TB 0.08;
	TC 0.2;	
    KA 50;
	EMAX 3;
	EMIN -3;

	Governor_type DEGOV1;
	DEGOV1_R 0.05; // A value of 0 means no droop characteristic           
	DEGOV1_T1 0.2;             
	DEGOV1_T2 0.1;             
	DEGOV1_T3 0.5;             
	DEGOV1_K 1.5;              
	DEGOV1_T4 1.0;               
	DEGOV1_T5 0.1;             
	DEGOV1_T6 0.2;             
	DEGOV1_TMAX 1.2;             
	DEGOV1_TMIN 0.0;             
	DEGOV1_TD 0.01; 

	object recorder {
		property rotor_speed,rotor_angle,flux1d,flux2q,EpRotated,VintRotated,Eint_A,Eint_B,Eint_C,Irotated,pwr_electric.real,pwr_electric.imag,pwr_mech,torque_mech,torque_elec,field_voltage;
		flags DELTAMODE;
		interval 1;
		file "Gen_2_Speed.csv";
	};
}

///// end of generators data /////////





	      object recorder {
          parent l675;
		  flags DELTAMODE;
          file Voltage_675.csv;
          interval 1;
          property voltage_A.real,voltage_A.imag,voltage_B.real,voltage_B.imag,voltage_C.real,voltage_C.imag;
     };
	 
	  object recorder {
          parent n632;
		  flags DELTAMODE;
          file Voltage_632.csv;
          interval 1;
          property voltage_A.real,voltage_A.imag,voltage_B.real,voltage_B.imag,voltage_C.real,voltage_C.imag;
     };
	 
	  object recorder {
          parent l671;
		  flags DELTAMODE;
          file Voltage_671.csv;
          interval 1;
          property voltage_A.real,voltage_A.imag,voltage_B.real,voltage_B.imag,voltage_C.real,voltage_C.imag;
     };
	 
	 	  object recorder {
          parent n650;
		  flags DELTAMODE;
          file Voltage_650.csv;
          interval 1;
          property voltage_A.real,voltage_A.imag,voltage_B.real,voltage_B.imag,voltage_C.real,voltage_C.imag;
     };
	 
	 object recorder {
          parent n633;
		  flags DELTAMODE;
          file Voltage_633.csv;
          interval 1;
          property voltage_A.real,voltage_A.imag,voltage_B.real,voltage_B.imag,voltage_C.real,voltage_C.imag;
     };
	 	  
		  object recorder {
          parent line_650-632;
		  flags DELTAMODE;
          file powerline_650-632.csv;
          interval 1;
          property power_in_A.real,power_in_B.real,power_in_C.real,power_in_A.imag,power_in_B.imag,power_in_C.imag;
     };

	 object recorder {
          parent line_632-6321;
		  flags DELTAMODE;
          file powerline_632-6321.csv;
          interval 1;
          property power_in_A.real,power_in_B.real,power_in_C.real,power_in_A.imag,power_in_B.imag,power_in_C.imag;
     };
	 object recorder {
          parent line_632-633;
		  flags DELTAMODE;
          file powerline_632-633.csv;
          interval 1;
          property power_in_A.real,power_in_B.real,power_in_C.real,power_in_A.imag,power_in_B.imag,power_in_C.imag;
     };

	 object recorder {
          parent line_671-680;
		  flags DELTAMODE;
          file powerline_671-680.csv;
          interval 1;
          property power_in_A.real,power_in_B.real,power_in_C.real,power_in_A.imag,power_in_B.imag,power_in_C.imag;
     };
	 
	 	 object recorder {
          parent line_671-684;
		  flags DELTAMODE;
          file powerline_671-684.csv;
          interval 1;
          property power_in_A.real,power_in_B.real,power_in_C.real,power_in_A.imag,power_in_B.imag,power_in_C.imag;
     };
	 
		object recorder {
          parent  switch_671-692;
		  flags DELTAMODE;
          file powerswitch_671-692.csv;
          interval 1;
          property power_in_A.real,power_in_B.real,power_in_C.real,power_in_A.imag,power_in_B.imag,power_in_C.imag;
     };
		
		
		object recorder {
          parent  line_692-675;
		  flags DELTAMODE;
          file powerline_692-675.csv;
          interval 1;
          property power_in_A.real,power_in_B.real,power_in_C.real,power_in_A.imag,power_in_B.imag,power_in_C.imag;
     };

	 object recorder {
          parent  line_684-611;
		  flags DELTAMODE;
          file powerline_684-611.csv;
          interval 1;
          property power_in_C.real,power_in_C.imag;
     };
	 
	 	object recorder {
          parent  line_632-645;
		  flags DELTAMODE;
          file powerline_632-645.csv;
          interval 1;
          property power_in_B.real,power_in_C.real,power_in_B.imag,power_in_C.imag;
     };
